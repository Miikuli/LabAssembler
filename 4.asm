LXI H, 0x002C  ; Устанавливаем HL на начало массива (адрес 0x002C)
MVI C, 1       ; Инициализируем счётчик индексов C = 1 (индексы от 1 до 10)
MVI A, 0       ; Обнуляем аккумулятор
MOV B, A       ; B будет хранить сумму нечётных индексов (инициализация 0)
MOV D, A       ; D будет хранить сумму чётных индексов (инициализация 0)

SUM_LOOP:
    MOV E, M     ; Загружаем текущий элемент
    MOV A, C     ; Загружаем индекс
    ORA A        ; Проверяем чётность количества единиц
    JPE EVEN     ; Если чётное, переходим к EVEN

ODD:
    ; Обработка нечётного индекса
    MOV A, B
    ADD E
    MOV B, A
    JMP NEXT

EVEN:
    ; Обработка чётного индекса
    MOV A, D
    ADD E
    MOV D, A

NEXT:
    INX H        ; Переход к следующему элементу
    INR C        ; Увеличиваем индекс
    
    ; Вызов "функции" проверки условия выхода
    CALL CHECK_END  ; Переходим к проверке
    JMP SUM_LOOP    ; Возвращаемся в цикл, если не завершено

CHECK_END:
    MOV A, C
    CPI 11
    JZ END      ; Если C = 11, завершаем программу
    RET         ; Возврат в NEXT, если цикл продолжается

END:
    MOV M, D     ; Сохраняем сумму чётных
    INX H
    MOV M, B     ; Сохраняем сумму нечётных
    HLT
